name: Deploy Lambda com SAM

on:
  push:
    branches:
      - main

jobs:
  create_layer:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configurar AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Instalar dependências
      run: |
        sudo apt-get update
        sudo apt-get install -y xz-utils

    - name: Preparar o Lambda Layer (ffmpeg)
      working-directory: layer-ffmpeg
      run: |
        mkdir -p build/layer/bin
        tar -xJf ffmpeg-release-amd64-static.tar.xz -C build/
        mv build/ffmpeg*/ffmpeg build/ffmpeg*/ffprobe build/layer/bin/

    - name: Criar bucket S3 se não existir
      run: |
        BUCKET_NAME="fiap-hackaton-2025-ffmpeg-layer"
        if ! aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
          echo "Criando bucket $BUCKET_NAME"
          aws s3api create-bucket --bucket "$BUCKET_NAME" --region us-east-2 --create-bucket-configuration LocationConstraint=us-east-2
        else
          echo "Bucket $BUCKET_NAME já existe"
        fi

    - name: Empacotar o CloudFormation com a AWS CLI
      working-directory: layer-ffmpeg
      run: |
        aws cloudformation package \
          --template-file template.yaml \
          --s3-bucket fiap-hackaton-2025-ffmpeg-layer \
          --output-template-file build/output.yaml

    - name: Deploy com AWS CloudFormation
      working-directory: layer-ffmpeg
      run: |
        STACK_NAME=fiap-hackaton-2025-ffmpeg-layer-2025layer
        aws cloudformation deploy \
          --template-file build/output.yaml \
          --stack-name $STACK_NAME \
          --capabilities CAPABILITY_IAM
        aws cloudformation describe-stacks \
          --stack-name $STACK_NAME \
          --query Stacks[].Outputs \
          --output table
        
  deploy:
    runs-on: ubuntu-latest
    needs: create_layer

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Instalar AWS SAM CLI
        run: |
          pip install aws-sam-cli

      - name: Instalar dependências e build com SAM
        run: |
          sam build

      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Criar bucket bucket-video-hackaton se não existir
        run: |
          BUCKET_NAME="bucket-video-hackaton"
          if ! aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
            echo "Criando bucket $BUCKET_NAME"
            aws s3api create-bucket --bucket "$BUCKET_NAME" --region us-east-2 --create-bucket-configuration LocationConstraint=us-east-2
          else
            echo "Bucket $BUCKET_NAME já existe"
          fi

      - name: Criar Role LambdaExecutionRole se não existir
        run: |
          ROLE_NAME="LambdaExecutionRole"
          ROLE_EXISTS=$(aws iam get-role --role-name $ROLE_NAME || true)

          if [ -z "$ROLE_EXISTS" ]; then
            echo "Criando role $ROLE_NAME..."
            aws iam create-role \
              --role-name $ROLE_NAME \
              --assume-role-policy-document '{
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "lambda.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              }'

            aws iam attach-role-policy \
              --role-name $ROLE_NAME \
              --policy-arn arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

            aws iam attach-role-policy \
              --role-name $ROLE_NAME \
              --policy-arn arn:aws:iam::aws:policy/AmazonS3FullAccess

            echo "Role criada com sucesso."
          else
            echo "Role $ROLE_NAME já existe"
          fi

      - name: Obter ARN da última versão da Lambda Layer
        id: get-layer
        run: |
          LAYER_NAME="fiap-hackaton-2025-ffmpeg-layer-2025layer"
          LAYER_ARN=$(aws lambda list-layer-versions \
            --layer-name $LAYER_NAME \
            --query 'LayerVersions[0].LayerVersionArn' \
            --output text)
          echo "LAYER_ARN=$LAYER_ARN" >> $GITHUB_OUTPUT

      - name: Fazer deploy com SAM
        run: |
          ROLE_ARN=$(aws iam get-role --role-name LambdaExecutionRole --query 'Role.Arn' --output text)
          sam deploy \
            --stack-name process-video-stack-2 \
            --s3-bucket bucket-video-hackaton \
            --capabilities CAPABILITY_IAM \
            --no-confirm-changeset \
            --region us-east-2 \
            --parameter-overrides \
              LambdaRoleArn=$ROLE_ARN \
              LambdaLayerArn=${{ steps.get-layer.outputs.LAYER_ARN }}